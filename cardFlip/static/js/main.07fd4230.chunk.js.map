{"version":3,"sources":["utils.js","levels.js","Card.js","GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["utils","find","arr","comparitor","desiredItem","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","err","return","findAll","desiredItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","cloneDeep","JSON","parse","stringify","levels","tooEasy","id","isSelected","isMatched","picture","easy","medium","impossible","Card","_ref","onCardSelected","showPreview","react_default","a","createElement","className","classes","concat","getClasses","onClick","bind","GameBoard","gameStarted","onGameWon","gameWon","level","_useState","useState","_useState2","Object","slicedToArray","toggleShowPreview","_useState3","_useState4","isReset","toggleIsReset","_useState5","_useState6","numSelected","updateSelection","_useState7","_useState8","numMatched","updateNumMatched","_useState9","_useState10","cards","updateCards","useEffect","setTimeout","checkMatches","length","cardCollection","forEach","card","sort","Math","random","cardId","selectedCard","selectedCards","isMatch","map","src_Card_0","key","App","setGameStart","setGameWon","setLevel","resetGame","resetWithLevelChange","isDisabled","buttonLevel","src_GameBoard","react","disabled","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07fd4230.chunk.js","sourcesContent":["const utils = {\n\tfind: (arr, comparitor) => {\n\t\tlet desiredItem = null;\n\n\t\tfor(let item of arr) {\n\t\t\tif(comparitor(item)) {\n\t\t\t\tdesiredItem = item;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn desiredItem;\n\t},\n\tfindAll: (arr, comparitor) => {\n\t\tlet desiredItems = [];\n\n\t\tfor(let item of arr) {\n\t\t\tif(comparitor(item)) {\n\t\t\t\tdesiredItems.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn desiredItems;\n\t},\n\tcloneDeep: (arr) => {\n\t\treturn JSON.parse((JSON.stringify(arr)));\n\t}\n};\n\nexport default utils;","const tooEasy = [\n\t{\n\t\tid: 0,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t},\n\t{\n\t\tid: 1,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t}\n];\nconst easy = [\n\t{\n\t\tid: 0,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'chesterfield'\n\t},\n\t{\n\t\tid: 1,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t},\n\t{\n\t\tid: 2,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t},\n\t{\n\t\tid: 3,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'picnic'\n\t},\n\t{\n\t\tid: 4,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'chesterfield'\n\t},\n\t{\n\t\tid: 5,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'curves'\n\t},\n\t{\n\t\tid: 6,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'curves'\n\t},\n\t{\n\t\tid: 7,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'picnic'\n\t}\n\t];\n\n\nconst medium = [\n\t{\n\t\tid: 0,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'picnic'\n\t},\n\t{\n\t\tid: 1,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'hearts'\n\t},\n\t{\n\t\tid: 2,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t},\n\t{\n\t\tid: 3,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'chesterfield'\n\t},\n\t{\n\t\tid: 4,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'picnic'\n\t},\n\t{\n\t\tid: 5,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'curves'\n\t},\n\t{\n\t\tid: 6,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'drops'\n\t},\n\t{\n\t\tid: 7,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'chesterfield'\n\t},\n\t{\n\t\tid: 8,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'hearts'\n\t},\n\t{\n\t\tid: 9,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'curves'\n\t},\n\t{\n\t\tid: 10,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'drops'\n\t},\n\t{\n\t\tid: 11,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t}\n];\n\nconst impossible = [\n\t{\n\t\tid: 0,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'pineapple'\n\t},\n\t{\n\t\tid: 1,\n\t\tisSelected: false,\n\t\tisMatched: false,\n\t\tpicture: 'square'\n\t}\n];\n\nconst levels = {\n\ttooEasy,\n\teasy,\n\tmedium,\n\timpossible\n};\n\nexport default levels;","import React from 'react';\nimport './Card.css';\n\nconst Card = ({id, picture, isSelected, isMatched, onCardSelected, showPreview}) => {\n\n\tconst getClasses = () => {\n\t\tlet classes = 'card';\n\t\t//todo: classes for animation based on selection\n\n\t\tif(isSelected || showPreview || isMatched) {\n\t\t\tclasses += ` card--selected card--${picture}`;\n\t\t}\n\t\telse {\n\t\t\tclasses += ' card--not-selected';\n\t\t}\n\n\t\tif(isMatched) {\n\t\t\tclasses += ' card--matched';\n\t\t}\n\n\n\t\t\n\n\t\treturn classes;\n\t};\n\treturn (\n\t\t<div className={getClasses()} onClick={onCardSelected.bind(this, id)}>\n\t\t\t<div className='card__inner'>\n\t\t\t\t<div className=\"card__front\"/>\n\t\t\t\t<div className=\"card__back\"/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React, {useState, useEffect} from 'react';\nimport './GameBoard.css';\nimport utils from './utils.js';\nimport levels from './levels.js';\nimport Card from './Card.js';\n\nfunction GameBoard({gameStarted, onGameWon, gameWon, level}) {\n\tconst [showPreview, toggleShowPreview] = useState(true);\n\tconst [isReset, toggleIsReset] = useState(false);\n\tconst [numSelected, updateSelection] = useState(0);\n\tconst [numMatched, updateNumMatched] = useState(0);\n\tconst [cards, updateCards] = useState(levels[level]);\n\n\tuseEffect( () => {\n\t\tif(showPreview && gameStarted) {\n\t\t\tsetTimeout(() => {\n\t\t\t\ttoggleShowPreview(false);\n\t\t\t}, 2200);\n\t\t}\n\t}, [gameStarted]);\n\n\tuseEffect( () => {\n\t\tif(numSelected === 2) {\n\t\t\tsetTimeout(checkMatches, 650);\n\t\t}\n\t}, [cards]);\n\n\tuseEffect( () => {\n\t\tif(numMatched === cards.length / 2) {\n\t\t\tonGameWon();\n\t\t}\n\t}, [numMatched]);\n\n\t//reset game\n\tuseEffect( () => {\n\t\tif(!gameWon && gameStarted) {\n\t\t\tlet cardCollection = levels[level];\n\t\t\tcardCollection.forEach((card) => {\n\t\t\t\tcard.isSelected = false;\n\t\t\t\tcard.isMatched = false;\n\t\t\t});\n\n\t\t\tcardCollection.sort( () => Math.random() - 0.5);\n\t\t\tupdateCards(cardCollection);\n\t\t\tupdateSelection(0);\n\t\t\tupdateNumMatched(0);\n\t\t\ttoggleIsReset(true);\n\t\t\ttoggleShowPreview(true);\n\t\t}\n\t}, [gameWon]);\n\n\tuseEffect( () => {\n\t\tif(isReset) {\n\t\t\ttoggleIsReset(false);\n\t\t\tsetTimeout(() => toggleShowPreview(false), 2200);\n\t\t}\n\t}, [isReset])\n\n\tconst onCardSelected = (cardId) => {\n\t\tif(showPreview || numSelected === 2) {\n\t\t\treturn;\n\t\t}\n\t\tlet cardCollection = utils.cloneDeep(cards);\n\t\tlet selectedCard = utils.find(cardCollection, card => card.id === cardId);\n\n\t\tif(selectedCard.isMatched) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectedCard.isSelected = !selectedCard.isSelected;\n\t\tupdateCards(cardCollection);\n\t\tupdateSelection(numSelected + (selectedCard.isSelected? 1 : -1));\n\t};\n\n\tconst checkMatches = () => {\n\t\tlet cardCollection = utils.cloneDeep(cards);\n\t\tlet selectedCards = utils.findAll(cardCollection, card => card.isSelected);\n\t\tlet isMatch = selectedCards[0].picture === selectedCards[1].picture;\n\t\tselectedCards.forEach(card => {\n\t\t\tcard.isMatched = isMatch;\n\t\t\tcard.isSelected = false;\n\t\t});\n\t\tif(isMatch) {\n\t\t\tupdateNumMatched(numMatched+1);\n\t\t}\n\t\tupdateSelection(0);\n\t\tupdateCards(cardCollection);\n\t}\n\n\n\tif(!gameStarted) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className='game-board'>\n\n\t\t\t{cards.map(card => {return (\n\t\t\t\t<Card\n\t\t\t\t\tpicture={card.picture}\n\t\t\t\t\tid={card.id}\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tisSelected={card.isSelected}\n\t\t\t\t\tisMatched={card.isMatched}\n\t\t\t\t\tonCardSelected={onCardSelected}\n\t\t\t\t\tshowPreview={showPreview}\n\t\t\t\t/>\n\t\t\t)})}\n\t\t</div>\n\t)\n}\n\nexport default GameBoard;","import React, {useState, Fragment} from 'react';\nimport './App.css';\nimport GameBoard from './GameBoard.js';\n\nfunction App() {\n  const [gameStarted, setGameStart] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  const [level, setLevel] = useState('medium');\n\n  const onGameWon = () => {\n    setGameWon(true);\n  };\n\n  const resetGame = () => {\n    setGameWon(false);\n  };\n\n  const resetWithLevelChange= (level) => {\n    setLevel(level);\n    setGameWon(false);\n  };\n\n  const isDisabled = (buttonLevel) => {\n    return buttonLevel === level;\n  }\n\n  const gameWonContent = () => {\n    return (\n      <Fragment>\n        <h2>You won!</h2>\n        <button onClick={resetGame}>Play Again?</button>\n        <h3>Change level?</h3>\n        <div className='button-wrap'>\n          <button disabled={isDisabled('tooEasy')} onClick={() => resetWithLevelChange('tooEasy')}>Too Easy</button>\n          <button disabled={isDisabled('easy')} onClick={() => resetWithLevelChange('easy')}>Easy</button>\n          <button disabled={isDisabled('medium')} onClick={() => resetWithLevelChange('medium')}>Medium</button>\n          <button disabled={isDisabled('impossible')} onClick={() => resetWithLevelChange('impossible')}>Impossible?!</button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <GameBoard gameStarted={gameStarted} level={level} onGameWon={onGameWon} gameWon={gameWon} />\n      {!gameStarted? (<button onClick={()=> setGameStart(true)}>Start Game</button>): null}\n      {gameWon? gameWonContent() : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}